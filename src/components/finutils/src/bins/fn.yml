name: fn
version: "1.0"
author: develop@FindoraNetwork.org
about: A command line tool of the Findora Network

args:
  - version:
      short: v
      long: version

subcommands:
  - genkey:
      about: Generate a new Findora key pair
      args:
        - gen-eth-address:
            help: generate eth address
            long: gen-eth-address
  - show:
      about: View the validator status and accumulated rewards
      args:
        - basic:
            help: show basic account info
            short: b
            long: basic
        - eth-address:
            help: use the eth address
            long: eth-address
  - setup:
      about: Set up environment variables for staking transactions
      args:
        - serv-addr:
            help: a node address of the Findora network
            short: S
            long: serv-addr
            takes_value: true
            value_name: URL/IP
        - owner-mnemonic-path:
            help: storage path of your mnemonic words
            short: O
            long: owner-mnemonic-path
            takes_value: true
            value_name: Path
        - validator-key:
            help: path to the tendermint keys of your validator node
            short: K
            long: validator-key
            takes_value: true
            value_name: Path
  - stake:
      about: Stake tokens (i.e. bond tokens) from a Findora account to a validator
      args:
        - amount:
            help: how much `FRA unit`s you want to stake
            short: n
            long: amount
            takes_value: true
            value_name: Amount
            required: true
        - commission-rate:
            help: the commission rate of your node, a float number from 0.0 to 1.0
            short: R
            long: commission-rate
            takes_value: true
            value_name: Rate
        - validator-memo:
            help: the description of your node, optional
            short: M
            long: validator-memo
            takes_value: true
            value_name: Memo
        - append:
            help: stake more FRAs to your node
            short: a
            long: append
        - staker-priv-key:
            help: the file which contains the mnemonic of proposer
            short: S
            long: staker-priv-key
            takes_value: true
            value_name: SecretKey
        - validator-td-addr:
            help: stake FRAs to a custom validator
            short: A
            long: validator-td-addr
            takes_value: true
            value_name: TendermintAddr
        - force:
            help: ignore warning and stake FRAs to your target node
            long: force
        - use-default-eth-address:
            help: use a private key of the eth address if `staker-priv-key` is not provided
            long: use-default-eth-address
            conflicts_with:
              - staker-priv-key
      groups:
        - staking-flags:
            args:
              - commission-rate
              - validator-memo
            multiple: true
            conflicts_with:
              - append
  - staker-update:
      about: Update information of a validator
      args:
        - commission-rate:
            help: the commission rate of your node, a float number from 0.0 to 1.0, optional
            short: R
            long: commission-rate
            takes_value: true
            value_name: Rate
        - validator-memo:
            help: the description of your node, optional
            short: M
            long: validator-memo
            takes_value: true
            value_name: Memo
        - validator-memo-name:
            long: validator-memo-name
            takes_value: true
            value_name: Name
        - validator-memo-desc:
            long: validator-memo-desc
            takes_value: true
            value_name: Desc
        - validator-memo-website:
            long: validator-memo-website
            takes_value: true
            value_name: Website
        - validator-memo-logo:
            long: validator-memo-logo
            takes_value: true
            value_name: Logo
        - use-eth-address:
            help: use a private key of the eth address
            long: use-eth-address
  - unstake:
      about: Unstake tokens (i.e. unbond tokens) from a Validator
      args:
        - staker-priv-key:
            help: the file which contains the mnemonic of proposer
            short: S
            long: staker-priv-key
            takes_value: true
            value_name: SecretKey
        - validator-td-addr:
            help: unstake FRAs to a custom validator
            short: A
            long: validator-td-addr
            takes_value: true
            value_name: TendermintAddr
        - amount:
            help: how much FRA to unstake, needed for partial undelegation
            short: n
            long: amount
            takes_value: true
            value_name: Amount
        - use-default-eth-address:
            help: use a private key of the eth address if `staker-priv-key` is not provided
            long: use-default-eth-address
            conflicts-with:
              - staker-priv-key
  - claim:
      about: Claim accumulated FRA rewards
      args:
        - validator-td-addr:
            help: stake FRAs to a custom validator
            short: A
            long: validator-td-addr
            takes_value: true
            value_name: TendermintAddr
        - amount:
            help: how much `FRA unit`s to claim
            short: n
            long: amount
            takes_value: true
            value_name: Amount
        - seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of an existing wallet
            long: seckey
            takes_value: true
            value_name: SECRET KEY
        - use-default-eth-address:
            help: use a private key of the eth address if `seckey` is not provided
            long: use-default-eth-address
            conflicts-with:
              - seckey
  - delegate:
      about: Delegating operations
      args:
        - amount:
            help: how much FRA units to be delegated
            short: n
            long: amount
            takes_value: true
            value_name: AMOUNT
        - seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of an existing wallet
            long: seckey
            takes_value: true
            value_name: SECRET KEY
        - validator:
            help: the address of a validator
            long: validator
            takes_value: true
            value_name: VALIDATOR ADDRESS
        - info:
            help: show delegation info
            long: info
            conflicts_with:
              - amount
              - validator
        - use-default-eth-address:
            help: use a private key of the eth address if `seckey` is not provided
            long: use-default-eth-address
            conflicts-with:
              - seckey
  - undelegate:
      about: Undelegating operations
      args:
        - amount:
            help: how much FRA units to be delegated
            short: n
            long: amount
            takes_value: true
            value_name: AMOUNT
        - seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of an existing wallet
            long: seckey
            takes_value: true
            value_name: SECRET KEY
        - validator:
            help: the address of a validator
            long: validator
            takes_value: true
            value_name: VALIDATOR ADDRESS
        - use-default-eth-address:
            help: use a private key of the eth address if `seckey` is not provided
            long: use-default-eth-address
            conflicts-with:
              - seckey
  - transfer:
      about: Transfer tokens from one address to another
      args:
        - asset:
            help: asset code which you want to transfer
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
        - from-seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of the sender
            short: f
            long: from-seckey
            takes_value: true
            value_name: SecKey
        - to-pubkey:
            help: base64-formatted `XfrPublicKey` of the receiver
            short: t
            long: to-pubkey
            takes_value: true
            value_name: PubKey
            allow_hyphen_values: true
        - to-wallet-address:
            help: fra prefixed address of FindoraNetwork
            short: T
            long: to-wallet-address
            takes_value: true
            value_name: Wallet Address
            conflicts_with:
              - to-pubkey
        - amount:
            help: how much units to transfer
            short: n
            long: amount
            takes_value: true
            value_name: Amount
            required: true
        - confidential-amount:
            help: mask the amount sent on the transaction log
            long: confidential-amount
        - confidential-type:
            help: mask the asset type sent on the transaction log
            long: confidential-type
        - eth-address:
            help: use a private key of the eth address
            long: eth-address
  - transfer-batch:
      about: Transfer tokens from one address to many others
      args:
        - from-seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of the receiver
            short: f
            long: from-seckey
            takes_value: true
            value_name: SecKey
        - to-pubkey-file:
            short: t
            long: to-pubkey-file
            takes_value: true
            value_name: File Path
        - to-wallet-address-file:
            short: T
            long: to-wallet-address-file
            takes_value: true
            value_name: File Path
            conflicts_with:
              - to-pubkey-file
        - amount:
            help: how much FRA units to transfer
            short: n
            long: amount
            takes_value: true
            value_name: Amount
            required: true
        - confidential-amount:
            help: mask the amount sent on the transaction log
            long: confidential-amount
        - confidential-type:
            help: mask the asset type sent on the transaction log
            long: confidential-type
        - eth-address:
            help: use a private key of the eth address
            long: eth-address
  - wallet:
      about: manipulates a findora wallet
      args:
        - create:
            help: create a new findora wallet
            long: create
        - show:
            help: show information of a findora wallet
            long: show
            conflicts_with:
              - create
        - asset:
            help: code of asset, such as `fra`
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
            conflicts_with:
              - create
        - seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of an existing wallet
            long: seckey
            takes_value: true
            value_name: SECRET KEY
            conflicts_with:
              - create
        - eth-address:
            help: use the eth address
            long: eth-address
  - asset:
      about: manipulate custom asset
      groups:
        - create-flags:
            args:
              - create
            conflicts_with:
              - issue
              - show
              - amount
              - hidden
              - addr
              - maximum
        - issue-flags:
            args:
              - issue
            conflicts_with:
              - create
              - show
              - decimal
              - memo
              - transferable
              - addr
        - show-flags:
            args:
              - show
            conflicts_with:
              - create
              - issue
              - seckey
              - decimal
              - transferable
              - maximum
              - memo
              - amount
              - hidden
              - code
      args:
        - create:
            help: create a new asset
            long: create
            conflicts_with:
              - issue
              - show
        - issue:
            help: issue a asset on ledger
            long: issue
            conflicts_with:
              - create
              - show
        - show:
            help: show list of assets
            long: show
            conflicts_with:
              - create
              - issue
        - code:
            help: Custom asset type code
            long: code
            takes_value: true
            value_name: ASSET CODE
            allow_hyphen_values: true
        - addr:
            help: Findora wallet address
            long: addr
            takes_value: true
            value_name: WALLET ADDRESS
        - seckey:
            help: the file which contains base64-formatted `XfrPrivateKey` of findora account
            long: seckey
            takes_value: true
            value_name: SECRET KEY
        - decimal:
            help: asset decimals of a new asset
            long: decimal
            takes_value: true
            value_name: DECIMAL
        - transferable:
            help: transferability type of a new asset
            long: transferable
        - maximum:
            help: maximum amount of a new asset
            long: maximum
            takes_value: true
            value_name: MAXIMUM AMOUNT
        - memo:
            help: asset memo of a new asset
            long: memo
            takes_value: true
            value_name: MEMO
        - amount:
            help: amount when issuing a asset
            long: amount
            takes_value: true
            value_name: AMOUNT
        - hidden:
            help: hidden asset amount when issuing asset on ledger
            long: hidden
        - eth-address:
            help: use the eth address
            long: eth-address
  - account:
      about: Return user contract account information or the balance if secret key is provided
      args:
        - addr:
            help: findora account(eg:fra1rkv...) or Ethereum address(g:0xd3Bf...)
            short: a
            long: addr
            takes_value: true
            value_name: WALLET ADDRESS
        - sec-key:
            help: base64-formatted `XfrPrivateKey`
            short: s
            long: sec-key
            takes_value: true
            value_name: SECRET KEY
        - asset:
            help: code of asset, such as `fra`
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - contract-deposit:
      about: Transfer an asset from the UTXO chain to the EVM chain
      args:
        - addr:
            help: ethereum address to receive asset, eg:0xd3Bf...
            short: a
            long: addr
            takes_value: true
            value_name: WALLET ADDRESS
            required: true
        - amount:
            help: deposit asset amount
            short: n
            long: amount
            takes_value: true
            value_name: AMOUNT
            required: true
        - asset:
            help: deposit asset type.
            short: s
            long: asset
            takes_value: true
            value_name: ASSET
            required: false
        - lowlevel-data:
            help: deposit with evm lowlevel call.
            short: l
            long: lowlevel
            takes_value: true
            value_name: LOWLEVEL
            required: false
        - eth-address:
            help: use the eth address
            long: eth-address
  - contract-withdraw:
      about: Transfer FRA from an Ethereum address to the specified Findora account
      args:
        - addr:
            help: findora account to receive FRA, eg:fra1rkv...
            short: a
            long: addr
            takes_value: true
            value_name: WALLET ADDRESS
        - amount:
            help: withdraw FRA amount
            short: n
            long: amount
            takes_value: true
            value_name: AMOUNT
            required: true
        - eth-key:
            help: ethereum account mnemonic phrase sign withdraw tx
            short: e
            long: eth-key
            takes_value: true
            value_name: MNEMONIC
            required: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - gen-eth-key:
      about: Generate an Ethereum address
  - owned-abars:
      about: Get Anon UTXOs for a keypair using the commitment
      args:
        - commitments:
            help: Commitment of the ABAR
            short: c
            long: commitments
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - from-seckey:
            help: Xfr secret key file path of receiver
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
        - asset:
            help: code of asset, such as `fra`
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - anon-balance:
      about: List Anon balance and spending status for a public key and a list of commitments
      args:
        - commitments:
            help: the list of commitments in base64 form.
            short: c
            long: commitments
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - from-seckey:
            help: Xfr secret key file path of converter
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
            required: true
        - asset:
            help: code of asset, such as `fra`
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - owned-open-abars:
      about: Get Open Anon UTXOs for a keypair using commitment
      args:
        - commitment:
            help: The commitment of ABAR
            short: c
            long: commitment
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - from-seckey:
            help: Xfr secret key file path of converter
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
            required: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - owned-utxos:
      about: List owned UTXOs for a public key
      args:
        - asset:
            help: asset code which you want to tansfer
            long: asset
            takes_value: true
            value_name: ASSET
            allow_hyphen_values: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - convert-bar-to-abar:
      about: Convert a BAR to Anon BAR for yourself
      args:
        - from-seckey:
            help: Xfr secret key file path of converter
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
        - to-address:
            help: bech32 address of receiver keys
            short: a
            long: to-address
            takes_value: true
            value_name: TO ADDRESS
            required: true
        - txo-sid:
            help: Txo Sid of input to convert
            short: t
            long: txo-sid
            takes_value: true
            value_name: TXO SID
            required: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - convert-abar-to-bar:
      about: Convert an ABAR to BAR
      args:
        - from-seckey:
            help: Xfr secret key file path of converter
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
        - commitment:
            help: Commitment for the input Anon BAR
            short: c
            long: commitment
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - to-pubkey:
            help: base64-formatted `XfrPublicKey` of the receiver
            short: t
            long: to-pubkey
            takes_value: true
            value_name: PubKey
            allow_hyphen_values: true
        - to-wallet-address:
            help: Xfr public key of the receiver
            short: T
            long: to-wallet-address
            takes_value: true
            value_name: XFR WALLET ADDRESS
            conflicts_with:
              - to-pubkey
        - confidential-amount:
            help: mask the amount sent on the transaction log
            long: confidential-amount
        - confidential-type:
            help: mask the asset type sent on the transaction log
            long: confidential-type
        - eth-address:
            help: use the eth address
            long: eth-address
  - anon-transfer:
      about: Perform an anonymous transfer
      args:
        - from-seckey:
            help: Xfr secret key file path of sender
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
        - commitment:
            help: Commitment for the input Anon BAR
            short: c
            long: commitment
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - fra-commitment:
            help: Commitment for the input FRA Anon BAR
            long: fra-commitment
            takes_value: true
            value_name: FRA COMMITMENT
            allow_hyphen_values: true
        - to-address:
            help: Address of the receiver
            long: to-address
            takes_value: true
            value_name: ADDRESS
            required: true
            allow_hyphen_values: true
        - amount:
            help: how much units to transfer
            short: n
            long: amount
            takes_value: true
            value_name: Amount
            required: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - anon-transfer-batch:
      about: Anonymous Transfer of tokens from multiple inputs to multiple outputs
      args:
        - from-seckey:
            help: Xfr secret key file path of sender
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
            required: true
        - commitment-file:
            help: Commitments for the input Anon BARs
            short: c
            long: commitment-file
            takes_value: true
            value_name: COMMITMENT
            required: true
        - to-address-file:
            help: Xfr public keys of the receivers
            long: to-address-file
            takes_value: true
            value_name: PUBLIC KEY
            required: true
        - amount-file:
            help: how much units to transfer for each receiver
            short: n
            long: amount-file
            takes_value: true
            value_name: Amount
            required: true
        - asset-file:
            help: Relative asset code type.
            short: a
            long: asset-file
            takes_value: true
            value_name: Asset
            required: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - anon-fetch-merkle-proof:
      about: Query Merkle tree leaf info
      args:
        - atxo-sid:
            help: ATXO SID of the ABAR
            short: a
            long: atxo-sid
            takes_value: true
            value_name: ATXO SID
            required: true
  - check-abar-status:
      about: Check the spending status and balance of ABAR
      args:
        - commitment:
            help: Commitment of the ABAR
            short: c
            long: commitment
            takes_value: true
            value_name: COMMITMENT
            required: true
            allow_hyphen_values: true
        - from-seckey:
            help: Xfr secret key file path of sender
            short: s
            long: from-seckey
            takes_value: true
            value_name: SECRET KEY PATH
            required: true
        - eth-address:
            help: generate eth address
            long: eth-address
  - replace_staker:
      about: Replace the staker of the validator with target address
      args:
        - validator-td-addr:
            help: stake FRAs to a custom validator
            short: A
            long: validator-td-addr
            takes_value: true
            value_name: TendermintAddr
        - target:
            help: the public key of new staker, you must be the staker of the validator, you could use `fn setup` to configure your secret key and public key.
            short: t
            long: target
            takes_value: true
            value_name: TARGET PUBLIC KEY
            required: true
            allow_hyphen_values: true
        - td_address:
            help: the tendermint address that you may want to replace.
            long: td_address
            takes_value: true
            value_name: TENDERMINT ADDRESS
            required: false
        - td_pubkey:
            help: the tendermint public key that you may want to replace.
            long: td_pubkey
            takes_value: true
            value_name: TENDERMINT PUBKEY
            required: false
            allow_hyphen_values: true
        - eth-address:
            help: use the eth address
            long: eth-address
  - dev:
      about: Manage development clusters on your localhost
      args:
        - env_name:
            help: The name of the target env
            short: e
            long: env-name
            takes_value: true
            value_name: ENV NAME
            required: false
      subcommands:
        - create:
            about: Create a new env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - block_itv_secs:
                  help: Block interval in seconds
                  short: i
                  long: block-itv-secs
                  takes_value: true
                  value_name: BLOCK INTERVAL
                  required: false
              - validator_num:
                  help: How many initial validators should be created
                  short: N
                  long: validator-num
                  takes_value: true
                  value_name: VALIDATOR NUMBER
                  required: false
              - evm_chain_id:
                  help: The chain id in the scope of evm logic
                  short: I
                  long: evm-chain-id
                  takes_value: true
                  value_name: EVM CHAIN ID
                  required: false
              - checkpoint_file:
                  help: The file path of the checkpoint file
                  short: c
                  long: checkpoint-file
                  takes_value: true
                  value_name: CHECKPOINT FILE
                  required: false
              - host_ip:
                  help: The IP of your local host, default to 127.0.0.1
                  short: H
                  long: host-ip
                  takes_value: true
                  value_name: HOST IP
                  required: false
              - abcid_bin_path:
                  help: The path of your custom abcid binary
                  short: d
                  long: abcid-bin-path
                  takes_value: true
                  value_name: ABCID BIN PATH
                  required: false
              - tendermint_bin_path:
                  help: The path of your custom tendermint binary
                  short: D
                  long: tendermint-bin-path
                  takes_value: true
                  value_name: TENDERMINT BIN PATH
                  required: false
              - abcid_extra_flags:
                  help: A pair of quotes should be used when specifying extra flags
                  short: x
                  long: abcid-extra-flags
                  takes_value: true
                  value_name: ABCID EXTRA FLAGS
                  allow_hyphen_values: true
                  required: false
              - tendermint_extra_flags:
                  help: A pair of quotes should be used when specifying extra flags
                  short: X
                  long: tendermint-extra-flags
                  takes_value: true
                  value_name: TENDERMINT EXTRA FLAGS
                  allow_hyphen_values: true
                  required: false
              - force:
                  help: destroy the target ENV and create a new one
                  short: f
                  long: force
                  takes_value: false
                  required: false
        - destroy:
            about: Destroy an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - destroy-all:
            about: Destroy all existing ENVs
        - start:
            about: Start an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - start-all:
            about: Start all existing ENVs
        - stop:
            about: Stop an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - stop-all:
            about: Stop all existing ENVs
        - push-node:
            about: Attach a new node to an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - pop-node:
            about: Pop a node from an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - show:
            about: Default operation, show the information of an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - show-all:
            about: Show the details of all existing ENVs
        - list:
            about: List the names of all existing ENVs
        - init:
            about: Config the initial settings(POS,FRA issuance...)
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - init-all:
            about: Apply the `init` operation to all existing ENVs
  - ddev:
      about: Manage development clusters on remote hosts
      args:
        - env_name:
            help: The name of the target env
            short: e
            long: env-name
            takes_value: true
            value_name: ENV NAME
            required: false
      subcommands:
        - create:
            about: Create a new env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - block_itv_secs:
                  help: Block interval in seconds
                  short: i
                  long: block-itv-secs
                  takes_value: true
                  value_name: BLOCK INTERVAL
                  required: false
              - validator_num:
                  help: How many initial validators should be created
                  short: N
                  long: validator-num
                  takes_value: true
                  value_name: VALIDATOR NUMBER
                  required: false
              - evm_chain_id:
                  help: The chain id in the scope of evm logic
                  short: I
                  long: evm-chain-id
                  takes_value: true
                  value_name: EVM CHAIN ID
                  required: false
              - checkpoint_file:
                  help: The file path of the checkpoint file
                  short: c
                  long: checkpoint-file
                  takes_value: true
                  value_name: CHECKPOINT FILE
                  required: false
              - hosts:
                  short: M
                  long: hosts
                  takes_value: true
                  value_name: HOSTS
                  required: false
              - abcid_bin_path:
                  help: The path of your custom abcid binary
                  short: d
                  long: abcid-bin-path
                  takes_value: true
                  value_name: ABCID BIN PATH
                  required: false
              - tendermint_bin_path:
                  help: The path of your custom tendermint binary
                  short: D
                  long: tendermint-bin-path
                  takes_value: true
                  value_name: TENDERMINT BIN PATH
                  required: false
              - abcid_extra_flags:
                  help: A pair of quotes should be used when specifying extra flags
                  short: x
                  long: abcid-extra-flags
                  takes_value: true
                  value_name: ABCID EXTRA FLAGS
                  allow_hyphen_values: true
                  required: false
              - tendermint_extra_flags:
                  help: A pair of quotes should be used when specifying extra flags
                  short: X
                  long: tendermint-extra-flags
                  takes_value: true
                  value_name: TENDERMINT EXTRA FLAGS
                  allow_hyphen_values: true
                  required: false
              - force:
                  help: destroy the target ENV and create a new one
                  short: f
                  long: force
                  takes_value: false
                  required: false
        - destroy:
            about: Destroy an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - destroy-all:
            about: Destroy all existing ENVs
        - start:
            about: Start an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - start-all:
            about: Start all existing ENVs
        - stop:
            about: Stop an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - stop-all:
            about: Stop all existing ENVs
        - push-node:
            about: Attach a new node to an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - pop-node:
            about: Pop a node from an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - show:
            about: Default operation, show the information of an existing env
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - show-all:
            about: Show the details of all existing ENVs
        - list:
            about: List the names of all existing ENVs
        - init:
            about: Config the initial settings(POS,FRA issuance...)
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
        - init-all:
            about: Apply the `init` operation to all existing ENVs
        - host-put-file:
            about: Put a local file to all remote hosts
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - local_path:
                  short: l
                  long: local-path
                  takes_value: true
                  value_name: LOCAL PATH
                  required: true
              - remote_path:
                  help: Optional, will use the value of `local_path` if missing
                  short: r
                  long: remote-path
                  takes_value: true
                  value_name: REMOTE PATH
                  required: false
              - hosts:
                  short: M
                  long: hosts
                  takes_value: true
                  value_name: HOSTS
                  required: false
        - host-get-file:
            about: Get a remote file from all remote hosts
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - local_base_dir:
                  help: Optional, will use `/tmp` if missing, all remote files will be collected into this directory, `local file name` will be `remote file name` prefixed with its `host address`
                  short: l
                  long: local-base-dir
                  takes_value: true
                  value_name: LOCAL BASE DIR
                  required: false
              - remote_path:
                  help: Optional, will use the value of `local_path` if missing
                  short: r
                  long: remote-path
                  takes_value: true
                  value_name: REMOTE PATH
                  required: true
              - hosts:
                  short: M
                  long: hosts
                  takes_value: true
                  value_name: HOSTS
                  required: false
        - host-exec:
            about: Execute commands on all remote hosts
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - cmd:
                  help: Raw commands to be executed
                  short: c
                  long: cmd
                  takes_value: true
                  value_name: CMD
                  required: false
              - script_path:
                  help: The path of a shell script, will be ignored if the `cmd` field has value
                  short: s
                  long: script-path
                  takes_value: true
                  value_name: SCRIPT PATH
                  required: false
              - hosts:
                  short: M
                  long: hosts
                  takes_value: true
                  value_name: HOSTS
                  required: false
        - node-collect-logs:
            about: Collect all node logs from remote hosts to local host
            args:
              - env_name:
                  help: The name of the target env
                  short: e
                  long: env-name
                  takes_value: true
                  value_name: ENV NAME
                  required: false
              - local_base_dir:
                  help: Optional, will use `/tmp` if missing, all remote files will be collected into this directory, `local file name` will be `remote file name` prefixed with its `host address` and `node id`
                  short: l
                  long: local-base-dir
                  takes_value: true
                  value_name: LOCAL BASE DIR
                  required: false

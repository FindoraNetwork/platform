name: Wasm Building And Pushing
on: [push]

jobs:
  build-push:
    concurrency: wasmcat-ci-${GITHUB_REF##*/}
    runs-on: ubuntu-latest
    # accepting any branches push but not pull_request
    if: github.event_name != 'pull_request'
    steps:
      - name: Extract vars
        id: vars
        run: |
          echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=sha::${GITHUB_SHA}"
          echo "::set-output name=tmp::$(mktemp -d)"

      - name: Setup Rust enviroment
        uses: actions-rs/toolchain@v1
        with: 
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - name: Install Wasm-pack
        # install wasm-pack from downloading is more faster then cargo install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Checkout platform branch
        uses: actions/checkout@v2

          # - name: Checkout wasm-js-bindings branch
          #   uses: actions/checkout@v2
          #   with:
          #     repository: FindoraNetwork/wasm-js-bindings
          #     ref: ${{ steps.vars.outputs.branch }}
          #     token: ${{ secrets.ACCESS_TOKEN }}
          #     path: wasm-js-bindings

      - name: Using cache to speed up
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
      - name: Building WASM
        run: |
          cd src/components/wasm
          wasm-pack build --release --target nodejs --out-dir ${{ steps.vars.outputs.tmp }}/wasm-js-bindings/nodejs
          wasm-pack build --release --target web --out-dir ${{ steps.vars.outputs.tmp }}/wasm-js-bindings/web
          wasm-pack build --release --target bundler --out-dir ${{ steps.vars.outputs.tmp }}/wasm-js-bindings/bundler

          #- name: Pushing wasm-js-bindings branch
          #  run: |
          #    cd ${GITHUB_WORKSPACE}/wasm-js-bindings
          #    git add .
          #    git config user.name wasmcat-bot
          #    git config user.email wasmcat-bot@users.noreply.github.com
          #    git commit -am "platform (${{ steps.vars.outputs.branch }}:${{ steps.vars.outputs.sha }}) by wasmcat-bot automation push ðŸš€"
          #    git push

        # uses: dmnemec/copy_file_to_another_repo_action@main
        # env:
        #   API_TOKEN_GITHUB: ${{ secrets.ACCESS_TOKEN }}
        # with:
        #   destination_repo: 'FindoraNetwork/wasm-js-bindings'
        #   destination_branch: ${{ steps.wasm.outputs.branch }}
        #   destination_branch_create: ${{ steps.wasm.outputs.branch }}
        #   source_file: '${{ steps.wasm.outputs.tmp }}'
        #   user_name: wasmcat-bot
        #   user_email: wasmcat-bot@users.noreply.github.com
        #   commit_message: 'platform (${{ steps.wasm.outputs.branch }}:${{ steps.wasm.outputs.sha }}) by wasmcat-bot automation push ðŸš€'
        
      - name: Pushing wasm-js-bindings branch
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          repository-name: FindoraNetwork/wasm-js-bindings
          branch: ${{ steps.vars.outputs.branch }}
          folder: ${{ steps.vars.outputs.tmp }}
          token: ${{ secrets.ACCESS_TOKEN }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          git-config-name: wasmcat-bot
          git-config-email: wasmcat-bot@users.noreply.github.com
          single-commit: true
          clean-exclude: |
            .gitignore
            .DS_Store
            LICENSE
          commit-message: "platform (${{ steps.vars.outputs.branch }}:${{ steps.vars.outputs.sha }}) by wasmcat-bot automation push ðŸš€"
